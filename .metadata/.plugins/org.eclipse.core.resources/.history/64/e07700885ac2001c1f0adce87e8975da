/*
 * text_mode_vga_color.c
 * Minimal driver for text mode VGA support
 * This is for Week 2, with color support
 *
 *  Created on: Oct 25, 2021
 *      Author: zuofu
 */

#include <system.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <alt_types.h>
#include "text_mode_vga_color.h"

void textVGAColorClr()
{
	for (int i = 0; i<(ROWS*COLUMNS) * 2; i++)
	{
		vga_ctrl->VRAM[i] = 0x00;
	}
}

void textVGADrawColorText(char* str, int x, int y, alt_u8 background, alt_u8 foreground)
{
	int i = 0;
	while (str[i]!=0)
	{
		vga_ctrl->VRAM[(y*COLUMNS + x + i) * 2] = foreground << 4 | background;
		vga_ctrl->VRAM[(y*COLUMNS + x + i) * 2 + 1] = str[i];
		i++;
	}
}

void setColorPalette (alt_u8 color, alt_u8 red, alt_u8 green, alt_u8 blue)
{
	//fill in this function to set the color palette starting at offset 0x0000 2000 (from base)
	int regIdx = color >> 1;
	int i;
	if (color % 2 == 0) { // setting the right color in a register
		vga_ctrl->palette[regIdx] &= ~(0xFFF << 1);
		for (i = 1; i <= 4; i++) {
			vga_ctrl->palette[regIdx] |= (((blue >> (i - 1)) & 1) << i);
		}
		for (i = 5; i <= 8; i++) {
			vga_ctrl->palette[regIdx] |= (((green >> (i - 5)) & 1) << i);
		}
		for (i = 9; i <= 12; i++) {
			vga_ctrl->palette[regIdx] |= (((red >> (i - 9)) & 1) << i);
		}
	}
	else {
		vga_ctrl->palette[regIdx] &= ~(0xFFF << 13);
		for (i = 13; i <= 16; i++) {
			vga_ctrl->palette[regIdx] |= (((blue >> (i - 13)) & 1) << i);
		}
		for (i = 17; i <= 20; i++) {
			vga_ctrl->palette[regIdx] |= (((green >> (i - 17)) & 1) << i);
		}
		for (i = 21; i <= 24; i++) {
			vga_ctrl->palette[regIdx] |= (((red >> (i - 21)) & 1) << i);
		}
	}
}


void textVGAColorScreenSaver()
{	
	int seconds = 0;
	//This is the function you call for your week 2 demo
	char color_string[80];
    int fg, bg, x, y;
	textVGAColorClr();
	//initialize palette
	for (int i = 0; i < 16; i++)
	{
		setColorPalette (i, colors[i].red, colors[i].green, colors[i].blue);
		//printf("Palette %d : %x\n", i, vga_ctrl->palette[i>>1]>>1);
	}
//	while (1)
//	{
		//printf("hi");
		fg = 0;
		bg = 15;
//		while (fg == bg)
//		{
//			fg = rand() % 16;
//			bg = rand() % 16;
//		}
		int newSeconds = (seconds % 60) % 10;
		int newSeconds2 = (seconds % 60) / 10;
		sprintf(color_string, "%d:%d%d", seconds / 60, newSeconds2, newSeconds);
//		printf("%d\n", seconds);
		printf("%d\n", seconds % 60);
		x = 51;//rand() % (80-strlen(color_string));
		y = 1;//rand() % 30;
		textVGADrawColorText (color_string, x, y, bg, fg);
		//textVGADrawColorText ("_", x, y, bg, fg);
		seconds++;
		usleep (200000);
//	}
}



 void keyToText() {
 	char guess[5];
 	int fg, bg, x, y;
 	textVGAColorClr();
 	//initialize palette
 	for (int i = 0; i < 16; i++)
 	{
 		setColorPalette (i, colors[i].red, colors[i].green, colors[i].blue);
 		//printf("Palette %d : %x\n", i, vga_ctrl->palette[i>>1]>>1);
 	}

 	while (1) {
 		printf("Hello\n");
 		char one_char [2] = "A";
 		x = 25;
 		y = 65;
 		fg = 0;
 		bg = 15;
 		textVGADrawColorText(one_char, x, y, bg, fg);
 		usleep (100000);
 	}
 }
