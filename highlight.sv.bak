module  highlight ( input Reset, frame_clk,
					input [7:0] keycode,
               		output [9:0]  highlightX, highlightY);
    
	logic [9:0] HL_X_Pos, HL_Y_Pos;
	logic atLeftEdge, atRightEdge, atTopEdge, atBotEdge;
	logic moveLeft, moveRight, moveUp, moveDown;
	logic [3:0] edges;
	assign edges = {atLeftEdge, atRightEdge, atTopEdge, atBotEdge};
	 
    parameter [9:0] HL_X_Corner = 4;  
    parameter [9:0] HL_Y_Corner = 80;  
    parameter [9:0] HL_X_Min = 4;      
    parameter [9:0] HL_X_Max = 324;     
    parameter [9:0] HL_Y_Min = 80;       
    parameter [9:0] HL_Y_Max = 400;
   
    always_ff @ (posedge Reset or posedge frame_clk)
    begin: Move_HL
        if (Reset)  // Asynchronous Reset
        begin
			HL_X_Pos <= HL_X_Corner;
			HL_Y_Pos <= HL_Y_Corner;
        end
           
        else 
        begin 
			if (HL_X_Pos == HL_X_Min) atLeftEdge <= 1;
			else atLeftEdge <= 0;

			if (HL_X_Pos == HL_X_Max) atRightEdge <= 1;
			else atRightEdge <= 0;

			if (HL_Y_Pos == HL_Y_Min) atTopEdge <= 1;
			else atTopEdge <= 0;

			if (HL_Y_Pos == HL_Y_Max) atBotEdge <= 1;
			else atBotEdge <= 0;
			
			// #define RIGHT 79
			// #define LEFT 80
			// #define DOWN 81
			// #define UP 82	 
			case ({keycode, edges})
				// 0000, 0001, 0010, 0011, 1000, 1001, 1010, 1011
				{8'h4F, 4'b0000}, {8'h4F, 4'b0001}, {8'h4F, 4'b0010}, {8'h4F, 4'b0011}, {8'h4F, 4'b1000}, {8'h4F, 4'b1001}, {8'h4F, 4'b1010}, {8'h4F, 4'b1011} : // right
					moveRight <= 1;
				// 0000, 0001, 0010, 0011, 0100, 0101, 0110, 0111
				{8'h50, 4'b0000}, {8'h50, 4'b0001}, {8'h50, 4'b0010}, {8'h50, 4'b0011}, {8'h50, 4'b0100}, {8'h50, 4'b0101}, {8'h50, 4'b0110}, {8'h50, 4'b0111} : // left
					moveLeft <= 1;
				// 0000, 0010, 0100, 0110, 1000, 1010, 1100, 1110
				{8'h51, 4'b0000}, {8'h51, 4'b0010}, {8'h51, 4'b0100}, {8'h51, 4'b0110}, {8'h51, 4'b1000}, {8'h51, 4'b1010}, {8'h51, 4'1100}, {8'h51, 4'b1110} : // down
					moveDown <= 1; 
				
				// 0000, 0001, 0100, 0101, 1000, 1001, 1100, 1101
				{8'h52, 4'b0000}, {8'h52, 4'b0001}, {8'h52, 4'b0100}, {8'h52, 4'b0101}, {8'h52, 4'b1000}, {8'h52, 4'b1001}, {8'h52, 4'b1100}, {8'h52, 4'b1101}, : // up
					moveUp <= 1;
				default: ;
			endcase

			if (moveRight)  HL_X_Pos <= HL_X_Pos + 80;
			if (moveLeft)	HL_X_Pos <= HL_X_Pos - 80;
			if (moveUp)		HL_Y_Pos <= HL_Y_Pos - 80;
			if (moveDown)	HL_Y_Pos <= HL_Y_Pos + 80;
		end
		
    end
    
    assign highlightX = HL_X_Pos;
    assign highlightY = HL_Y_Pos;    

endmodule
